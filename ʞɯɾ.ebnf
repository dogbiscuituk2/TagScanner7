/* EBNF variant compatible with https://rr.red-dove.com/ui */

ʞɯɾ-program ::= block
block ::= statement ( ( ',' | ';') statement )*
statement ::= ( label )* ( compound | if-statement | switch-statement | do-loop | try-block | 'break' | 'continue' | 'goto' label | 'stop' )
label ::= name ':'
compound ::= term ( binary-op term )*

if-statement ::= 'if' block 'then' block ( 'else' block )? 'end'
switch-statement ::= 'switch' block ( ( 'case' term ':' )+ block)* ('default' ':' block )? 'end'
do-loop ::= ( 'while' block )? 'do' block ( 'until' block )? 'end'
try-block ::= 'try' block ( catch-block )* ( 'finally' block )? 'end'
catch-block ::= 'catch' ( exception-type ( variable )? ':' )? block

cast ::= '(' type ')'
constant ::= bool | char | datetime | decimal | double | float | int | long | string | timespan | uint | ulong
function ::= function-name ( term | '(' ( block ) ')' )?
name ::= [http://www.w3.org/TR/xml-names/#NT-NCName]

unary-op ::= '+' | '＋' | '-' | '－' | '!' | 'not'
binary-op ::= assign-op | logical-op | relational-op | arithmetic-op
arithmetic-op ::= '+' | '＋' | '-' | '－' | '*' | '×' | '✕' | '/' | '÷' | '／' | '%'
assign-op ::= '<-' | ':=' | '←' | '&=' | '|=' | '^=' | '+=' | '-=' | '*=' | '/=' | '%='
logical-op ::= '&' | '&&' | '|' | '||' | '^' | 'and' | 'or' | 'xor'
relational-op ::= '=' | '==' | '!=' | '<>' | '#' | '≠' | '<' | '<=' | '≤' | '≯ ' | '>=' | '≥' | '≮ ' | '>'

/* nz-digit ::= '1' | '2' | '3' | '4' | '5' | '6' | '7' | '8' | '9' */
nz-digit ::= [0-9]
digit ::= '0' | nz-digit
int ::= '0' | ( nz-digit digit* )
